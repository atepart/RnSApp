name: Build and Release

on:
  push:
    branches:
      - master

permissions:
  packages: write
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        arch: [x86, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run build script
      if: runner.os == 'Windows'
      run: .\build.bat

    - name: Run build script
      if: runner.os == 'macOS'
      run: ./build.sh

    - name: Archive Release Asset
      if: runner.os == 'Windows'
      run: Compress-Archive -Path ./dist/RnSApp -DestinationPath ./dist/RnSApp_Windows_${{ matrix.arch }}.zip

    - name: Archive Release Asset
      if: runner.os == 'macOS'
      run: zip -r ./dist/RnSApp_MacOS_${{ matrix.arch }}.zip ./dist/RnSApp.app

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: RnSApp_${{ runner.os }}_${{ matrix.arch }}
        path: ./dist/RnSApp_${{ runner.os }}_${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: RnSApp_Windows_x86
        path: ./dist/RnSApp_Windows_x86.zip

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: RnSApp_Windows_arm64
        path: ./dist/RnSApp_Windows_arm64.zip

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: RnSApp_macOS_x86
        path: ./dist/RnSApp_MacOS_x86.zip

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: RnSApp_macOS_arm64
        path: ./dist/RnSApp_MacOS_arm64.zip

    - name: Get current date and time
      id: date
      run: echo "date=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

    - name: Create Release
      uses: elgohr/Github-Release-Action@v5
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: v${{ env.date }}
        title: Release v${{ env.date }}

    - name: Upload Windows x86 Release Asset
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./dist/RnSApp_Windows_x86.zip

    - name: Upload Windows arm64 Release Asset
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./dist/RnSApp_Windows_arm64.zip

    - name: Upload MacOS x86 Release Asset
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./dist/RnSApp_MacOS_x86.zip

    - name: Upload MacOS arm64 Release Asset
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ./dist/RnSApp_MacOS_arm64.zip
